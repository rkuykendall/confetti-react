{"version":3,"file":"confetti-react.cjs.production.min.js","sources":["../src/Particle.ts","../src/utils.ts","../src/ParticleGeneratorClass.ts","../src/Confetti.ts","../src/index.tsx"],"sourcesContent":["import { randomRange, randomInt, degreesToRads } from './utils';\nimport { ConfettiOptions } from './Confetti';\n\nexport enum ParticleShape {\n  Circle = 0,\n  Square,\n  Strip,\n}\n\nenum RotationDirection {\n  Positive = 1,\n  Negative = -1,\n}\n\nexport default class Particle {\n  constructor(context: CanvasRenderingContext2D, getOptions: () => ConfettiOptions, x: number, y: number) {\n    this.getOptions = getOptions;\n    const { colors, initialVelocityX, initialVelocityY } = this.getOptions();\n    this.context = context;\n    this.x = x;\n    this.y = y;\n    this.w = randomRange(5, 20);\n    this.h = randomRange(5, 20);\n    this.radius = randomRange(5, 10);\n    this.vx = randomRange(-initialVelocityX, initialVelocityX);\n    this.vy = randomRange(-initialVelocityY, 0);\n    this.shape = randomInt(0, 2);\n    this.angle = degreesToRads(randomRange(0, 360));\n    this.angularSpin = randomRange(-0.2, 0.2);\n    this.color = colors[Math.floor(Math.random() * colors.length)];\n    this.rotateY = randomRange(0, 1);\n    this.rotationDirection = randomRange(0, 1) ? RotationDirection.Positive : RotationDirection.Negative;\n  }\n\n  context: CanvasRenderingContext2D;\n\n  radius: number;\n\n  x: number;\n\n  y: number;\n\n  w: number;\n\n  h: number;\n\n  vx: number;\n\n  vy: number;\n\n  shape: ParticleShape;\n\n  angle: number;\n\n  angularSpin: number;\n\n  color: string;\n\n  // Actually used as scaleY to simulate rotation cheaply\n  rotateY: number;\n\n  rotationDirection: RotationDirection;\n\n  getOptions: () => ConfettiOptions;\n\n  update() {\n    const { gravity, wind, friction, opacity, drawShape } = this.getOptions();\n    this.x += this.vx;\n    this.y += this.vy;\n    this.vy += gravity;\n    this.vx += wind;\n    this.vx *= friction;\n    this.vy *= friction;\n    if (this.rotateY >= 1 && this.rotationDirection === RotationDirection.Positive) {\n      this.rotationDirection = RotationDirection.Negative;\n    } else if (this.rotateY <= -1 && this.rotationDirection === RotationDirection.Negative) {\n      this.rotationDirection = RotationDirection.Positive;\n    }\n\n    const rotateDelta = 0.1 * this.rotationDirection;\n\n    this.rotateY += rotateDelta;\n    this.angle += this.angularSpin;\n    this.context.save();\n    this.context.translate(this.x, this.y);\n    this.context.rotate(this.angle);\n    this.context.scale(1, this.rotateY);\n    this.context.rotate(this.angle);\n    this.context.beginPath();\n    this.context.fillStyle = this.color;\n    this.context.strokeStyle = this.color;\n    this.context.globalAlpha = opacity;\n    this.context.lineCap = 'round';\n    this.context.lineWidth = 2;\n    if (drawShape && typeof drawShape === 'function') {\n      drawShape.call(this, this.context);\n    } else {\n      switch (this.shape) {\n        case ParticleShape.Circle: {\n          this.context.beginPath();\n          this.context.arc(0, 0, this.radius, 0, 2 * Math.PI);\n          this.context.fill();\n          break;\n        }\n        case ParticleShape.Square: {\n          this.context.fillRect(-this.w / 2, -this.h / 2, this.w, this.h);\n          break;\n        }\n        case ParticleShape.Strip: {\n          this.context.fillRect(-this.w / 6, -this.h / 2, this.w / 3, this.h);\n          break;\n        }\n        default: {\n          throw new Error('Unknown type in Particle.ts');\n        }\n      }\n    }\n    this.context.closePath();\n    this.context.restore();\n  }\n}\n","import { Point } from './Point';\nimport { Rect } from './Rect';\nimport { Circle } from './CircleClass';\n\nexport function norm(value: number, min: number, max: number) {\n  return (value - min) / (max - min);\n}\n\nexport function lerp(lnorm: number, min: number, max: number) {\n  return (max - min) * lnorm + min;\n}\n\nexport function map(value: number, sourceMin: number, sourceMax: number, destMin: number, destMax: number) {\n  return lerp(norm(value, sourceMin, sourceMax), destMin, destMax);\n}\n\nexport function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, Math.min(min, max)), Math.max(min, max));\n}\n\nexport function distance(p0: Point, p1: Point) {\n  const dx = p1.x - p0.x;\n  const dy = p1.y - p0.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nexport function distanceXY(x0: number, y0: number, x1: number, y1: number) {\n  const dx = x1 - x0;\n  const dy = y1 - y0;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nexport function circleCollision(c0: Circle, c1: Circle) {\n  return distance(c0, c1) <= c0.radius + c1.radius;\n}\n\nexport function circlePointCollision(x: number, y: number, circle: Circle) {\n  return distanceXY(x, y, circle.x, circle.y) < circle.radius;\n}\n\nexport function inRange(value: number, min: number, max: number) {\n  return value >= Math.min(min, max) && value <= Math.max(min, max);\n}\n\nexport function pointInRect(p: Point, rect: Rect) {\n  return inRange(p.x, rect.x, rect.x + rect.w) && inRange(p.y, rect.y, rect.y + rect.h);\n}\n\nexport function rangeIntersect(min0: number, max0: number, min1: number, max1: number) {\n  return Math.max(min0, max0) >= Math.min(min1, max1) && Math.min(min0, max0) <= Math.max(min1, max1);\n}\n\nexport function rectIntersect(r0: Rect, r1: Rect) {\n  return rangeIntersect(r0.x, r0.x + r0.w, r1.x, r1.x + r1.w) && rangeIntersect(r0.y, r0.y + r0.h, r1.y, r1.y + r1.h);\n}\n\nexport function degreesToRads(degrees: number) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport function radsToDegrees(radians: number) {\n  return (radians * 180) / Math.PI;\n}\n\nexport function randomRange(min: number, max: number) {\n  return min + Math.random() * (max - min);\n}\n\nexport function randomInt(min: number, max: number) {\n  return Math.floor(min + Math.random() * (max - min + 1));\n}\n","import { ConfettiOptions } from './Confetti';\nimport { Rect } from './Rect';\nimport Particle from './Particle';\nimport { randomRange } from './utils';\n\nexport interface ParticleGenerator extends Rect {\n  removeParticleAt: (index: number) => void;\n  getParticle: () => void;\n  animate: () => boolean;\n  particles: Particle[];\n  particlesGenerated: number;\n}\n\nexport default class ParticleGeneratorClass implements ParticleGenerator {\n  constructor(canvas: HTMLCanvasElement, getOptions: () => ConfettiOptions) {\n    this.canvas = canvas;\n    const ctx = this.canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get canvas context');\n    }\n    this.context = ctx;\n    this.getOptions = getOptions;\n  }\n\n  canvas: HTMLCanvasElement;\n\n  context: CanvasRenderingContext2D;\n\n  getOptions: () => ConfettiOptions;\n\n  x = 0;\n\n  y = 0;\n\n  w = 0;\n\n  h = 0;\n\n  lastNumberOfPieces = 0;\n\n  tweenInitTime: number = Date.now();\n\n  particles: Particle[] = [];\n\n  particlesGenerated = 0;\n\n  removeParticleAt = (i: number) => {\n    this.particles.splice(i, 1);\n  };\n\n  getParticle = () => {\n    const newParticleX = randomRange(this.x, this.w + this.x);\n    const newParticleY = randomRange(this.y, this.h + this.y);\n    return new Particle(this.context, this.getOptions, newParticleX, newParticleY);\n  };\n\n  animate = (): boolean => {\n    const { canvas, context, particlesGenerated, lastNumberOfPieces } = this;\n    const { run, recycle, numberOfPieces, debug, tweenFunction, tweenDuration } = this.getOptions();\n    if (!run) {\n      return false;\n    }\n\n    const nP = this.particles.length;\n    const activeCount = recycle ? nP : particlesGenerated;\n\n    const now = Date.now();\n\n    // Initial population\n    if (activeCount < numberOfPieces) {\n      // Use the numberOfPieces prop as a key to reset the easing timing\n      if (lastNumberOfPieces !== numberOfPieces) {\n        this.tweenInitTime = now;\n        this.lastNumberOfPieces = numberOfPieces;\n      }\n      const { tweenInitTime } = this;\n      // Add more than one piece per loop, otherwise the number of pieces would\n      // be limitted by the RAF framerate\n      const progressTime = now - tweenInitTime > tweenDuration ? tweenDuration : Math.max(0, now - tweenInitTime);\n      const tweenedVal = tweenFunction(progressTime, activeCount, numberOfPieces, tweenDuration);\n      const numToAdd = Math.round(tweenedVal - activeCount);\n      for (let i = 0; i < numToAdd; i += 1) {\n        this.particles.push(this.getParticle());\n      }\n      this.particlesGenerated += numToAdd;\n    }\n    if (debug) {\n      // Draw debug text\n      context.font = '12px sans-serif';\n      context.fillStyle = '#333';\n      context.textAlign = 'right';\n      context.fillText(`Particles: ${nP}`, canvas.width - 10, canvas.height - 20);\n    }\n\n    // Maintain the population\n    this.particles.forEach((p, i) => {\n      // Update each particle's position\n      p.update();\n      // Prune the off-canvas particles\n      if (p.y > canvas.height || p.y < -100 || p.x > canvas.width + 100 || p.x < -100) {\n        if (recycle && activeCount <= numberOfPieces) {\n          // Replace the particle with a brand new one\n          this.particles[i] = this.getParticle();\n        } else {\n          this.removeParticleAt(i);\n        }\n      }\n    });\n    return nP > 0 || activeCount < numberOfPieces;\n  };\n}\n","import tweens from 'tween-functions';\nimport { Rect } from './Rect';\nimport ParticleGeneratorClass from './ParticleGeneratorClass';\n\nexport interface ConfettiOptions {\n  /**\n   * Width of the component\n   * @default window.width\n   */\n  width: number;\n  /**\n   * Height of the component\n   * @default window.height\n   */\n  height: number;\n  /**\n   * Max number of confetti pieces to render.\n   * @default 200\n   */\n  numberOfPieces: number;\n  /**\n   * Slows movement of pieces. (lower number = slower confetti)\n   * @default 0.99\n   */\n  friction: number;\n  /**\n   * Blows confetti along the X axis.\n   * @default 0\n   */\n  wind: number;\n  /**\n   * How fast it falls (pixels per frame)\n   * @default 0.1\n   */\n  gravity: number;\n  /**\n   * How fast the confetti is emitted horizontally\n   * @default 4\n   */\n  initialVelocityX: number;\n  /**\n   * How fast the confetti is emitted vertically\n   * @default 10\n   */\n  initialVelocityY: number;\n  /**\n   * Array of colors to choose from.\n   */\n  colors: string[];\n  /**\n   * Opacity of the confetti.\n   * @default 1\n   */\n  opacity: number;\n  /**\n   * If false, only numberOfPieces will be emitted and then stops. If true, when a confetto goes offscreen, a new one will be emitted.\n   * @default true\n   */\n  recycle: boolean;\n  /**\n   * If false, stops the requestAnimationFrame loop.\n   * @default true\n   */\n  run: boolean;\n  /**\n   * Renders some debug text on the canvas.\n   * @default false\n   */\n  debug: boolean;\n  /**\n   * A Rect defining the area where the confetti will spawn.\n   * @default {\n   *   x: 0,\n   *   y: 0,\n   *   w: canvas.width,\n   *   h: 0\n   * }\n   */\n  confettiSource: Rect;\n  /**\n   * Controls the rate at which confetti is spawned.\n   * @default easeInOutQuad\n   */\n  tweenFunction: (\n    currentTime: number,\n    currentValue: number,\n    targetValue: number,\n    duration: number,\n    s?: number,\n  ) => number;\n  /**\n   * Number of milliseconds it should take to spawn numberOfPieces.\n   * @default 5000\n   */\n  tweenDuration: number;\n  /**\n   * Function to draw your own confetti shapes.\n   */\n  drawShape?: (context: CanvasRenderingContext2D) => void;\n  /**\n   * Function called when all confetti has fallen off-canvas.\n   */\n  onConfettiComplete?: (confettiInstance?: Confetti) => void;\n}\n\nexport const confettiDefaults: Pick<ConfettiOptions, Exclude<keyof ConfettiOptions, 'confettiSource'>> = {\n  width: typeof window !== 'undefined' ? window.innerWidth : 300,\n  height: typeof window !== 'undefined' ? window.innerHeight : 200,\n  numberOfPieces: 200,\n  friction: 0.99,\n  wind: 0,\n  gravity: 0.1,\n  initialVelocityX: 4,\n  initialVelocityY: 10,\n  colors: [\n    '#f44336',\n    '#e91e63',\n    '#9c27b0',\n    '#673ab7',\n    '#3f51b5',\n    '#2196f3',\n    '#03a9f4',\n    '#00bcd4',\n    '#009688',\n    '#4CAF50',\n    '#8BC34A',\n    '#CDDC39',\n    '#FFEB3B',\n    '#FFC107',\n    '#FF9800',\n    '#FF5722',\n    '#795548',\n  ],\n  opacity: 1.0,\n  debug: false,\n  tweenFunction: tweens.easeInOutQuad,\n  tweenDuration: 5000,\n  recycle: true,\n  run: true,\n};\n\nexport class Confetti {\n  constructor(canvas: HTMLCanvasElement, opts: Partial<ConfettiOptions>) {\n    this.canvas = canvas;\n    const ctx = this.canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get canvas context');\n    }\n    this.context = ctx;\n\n    this.generator = new ParticleGeneratorClass(this.canvas, () => this.options as ConfettiOptions);\n    this.options = opts;\n    this.update();\n  }\n\n  canvas: HTMLCanvasElement;\n\n  context: CanvasRenderingContext2D;\n\n  _options!: ConfettiOptions;\n\n  generator: ParticleGeneratorClass;\n\n  rafId?: number;\n\n  get options(): Partial<ConfettiOptions> {\n    return this._options;\n  }\n\n  set options(opts: Partial<ConfettiOptions>) {\n    const lastRunState = this._options && this._options.run;\n    const lastRecycleState = this._options && this._options.recycle;\n    this.setOptionsWithDefaults(opts);\n    if (this.generator) {\n      Object.assign(this.generator, this.options.confettiSource);\n      if (typeof opts.recycle === 'boolean' && opts.recycle && lastRecycleState === false) {\n        this.generator.lastNumberOfPieces = this.generator.particles.length;\n      }\n    }\n    if (typeof opts.run === 'boolean' && opts.run && lastRunState === false) {\n      this.update();\n    }\n  }\n\n  setOptionsWithDefaults = (opts: Partial<ConfettiOptions>) => {\n    const computedConfettiDefaults = {\n      confettiSource: {\n        x: 0,\n        y: 0,\n        w: this.canvas.width,\n        h: 0,\n      },\n    };\n    this._options = {\n      ...computedConfettiDefaults,\n      ...confettiDefaults,\n      ...opts,\n    };\n    Object.assign(this, opts.confettiSource);\n  };\n\n  update = () => {\n    const {\n      options: { run, onConfettiComplete },\n      canvas,\n      context,\n    } = this;\n    if (run) {\n      context.fillStyle = 'white';\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    }\n    if (this.generator.animate()) {\n      this.rafId = requestAnimationFrame(this.update);\n    } else {\n      if (onConfettiComplete && typeof onConfettiComplete === 'function' && this.generator.particlesGenerated > 0) {\n        onConfettiComplete.call(this, this);\n      }\n      this._options.run = false;\n    }\n  };\n\n  reset = () => {\n    if (this.generator && this.generator.particlesGenerated > 0) {\n      this.generator.particlesGenerated = 0;\n      this.generator.particles = [];\n      this.generator.lastNumberOfPieces = 0;\n    }\n  };\n\n  stop = () => {\n    this.options = { run: false };\n    if (this.rafId) {\n      cancelAnimationFrame(this.rafId);\n      this.rafId = undefined;\n    }\n  };\n}\n\nexport default Confetti;\n","import React, { Component, CanvasHTMLAttributes } from 'react';\nimport Confetti, { ConfettiOptions, confettiDefaults } from './Confetti';\n\nconst ref = React.createRef<HTMLCanvasElement>();\n\ninterface Refs {\n  [key: string]: React.Ref<HTMLElement>;\n}\n\nfunction extractCanvasProps(\n  props: Partial<ConfettiOptions> | any,\n): [Partial<ConfettiOptions>, Partial<CanvasHTMLAttributes<HTMLCanvasElement>>, Refs] {\n  const confettiOptions: Partial<ConfettiOptions> = {};\n  const refs: Refs = {};\n  const rest: any = {};\n  const confettiOptionKeys = [...Object.keys(confettiDefaults), 'confettiSource', 'drawShape', 'onConfettiComplete'];\n  const refProps = ['canvasRef'];\n  Object.keys(props).forEach(prop => {\n    const val = props[prop as string];\n    if (confettiOptionKeys.includes(prop)) {\n      confettiOptions[prop] = val;\n    } else if (refProps.includes(prop)) {\n      refProps[prop as any] = val;\n    } else {\n      rest[prop] = val;\n    }\n  });\n  return [confettiOptions, rest, refs];\n}\n\nexport type Props = Partial<ConfettiOptions> &\n  CanvasHTMLAttributes<HTMLCanvasElement> & {\n    canvasRef?: React.Ref<HTMLCanvasElement>;\n  };\n\nclass ConfettiReactInternal extends Component<Props> {\n  static readonly defaultProps = {\n    ...confettiDefaults,\n  };\n\n  static readonly displayName = 'ConfettiReact';\n\n  canvas: React.RefObject<HTMLCanvasElement> = React.createRef();\n\n  confetti?: Confetti;\n\n  constructor(props: Props) {\n    super(props);\n    this.canvas = (props.canvasRef as React.RefObject<HTMLCanvasElement>) || ref;\n  }\n\n  componentDidMount() {\n    if (this.canvas.current) {\n      const opts = extractCanvasProps(this.props)[0];\n      this.confetti = new Confetti(this.canvas.current, opts);\n    }\n  }\n\n  componentDidUpdate() {\n    const confettiOptions = extractCanvasProps(this.props)[0];\n    if (this.confetti) {\n      this.confetti.options = confettiOptions as ConfettiOptions;\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.confetti) {\n      this.confetti.stop();\n    }\n    this.confetti = undefined;\n  }\n\n  render() {\n    const [confettiOptions, passedProps] = extractCanvasProps(this.props);\n    const canvasStyles = {\n      zIndex: 2,\n      position: 'absolute' as 'absolute',\n      pointerEvents: 'none' as 'none',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      ...passedProps.style,\n    };\n    return (\n      <canvas\n        width={confettiOptions.width}\n        height={confettiOptions.height}\n        ref={this.canvas}\n        {...passedProps}\n        style={canvasStyles}\n      />\n    );\n  }\n}\n\n// eslint-disable-next-line react/display-name\nexport const Index = React.forwardRef<HTMLCanvasElement, Props>((props, _ref) => (\n  <ConfettiReactInternal canvasRef={ref} {...props} />\n));\n\nexport default Index;\n"],"names":["ParticleShape","RotationDirection","randomRange","min","max","Math","random","Particle","context","getOptions","x","y","this","colors","initialVelocityX","initialVelocityY","w","h","radius","vx","vy","shape","floor","angle","PI","angularSpin","color","length","rotateY","rotationDirection","Positive","Negative","update","gravity","wind","friction","opacity","drawShape","save","translate","rotate","scale","beginPath","fillStyle","strokeStyle","globalAlpha","lineCap","lineWidth","call","Circle","arc","fill","Square","fillRect","Strip","Error","closePath","restore","ParticleGeneratorClass","canvas","Date","now","i","_this","particles","splice","newParticleX","newParticleY","particlesGenerated","lastNumberOfPieces","recycle","numberOfPieces","debug","tweenFunction","tweenDuration","run","nP","activeCount","tweenInitTime","tweenedVal","numToAdd","round","push","getParticle","font","textAlign","fillText","width","height","forEach","p","removeParticleAt","ctx","getContext","confettiDefaults","window","innerWidth","innerHeight","tweens","easeInOutQuad","Confetti","opts","_options","confettiSource","Object","assign","options","onConfettiComplete","clearRect","generator","animate","rafId","requestAnimationFrame","cancelAnimationFrame","undefined","lastRunState","lastRecycleState","setOptionsWithDefaults","ref","React","createRef","extractCanvasProps","props","confettiOptions","rest","confettiOptionKeys","keys","refProps","prop","val","includes","ConfettiReactInternal","canvasRef","componentDidMount","current","confetti","componentDidUpdate","componentWillUnmount","stop","render","passedProps","canvasStyles","zIndex","position","pointerEvents","top","left","bottom","right","style","Component","Index","forwardRef","_ref"],"mappings":"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"}